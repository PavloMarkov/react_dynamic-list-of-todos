{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","onShowClick","activeId","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","onChangeOption","onChangeQuary","useState","quary","setQuary","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","baseUser","name","email","phone","TodoModal","onCloseClick","userToShow","setUserToShow","useEffect","userId","href","App","setTodos","todoIdToShow","setTodoIdToShow","filterMethod","setFilterMethod","userQuary","setUserQuary","find","el","todosToShow","filter","todoToShow","task","toLowerCase","includes","option","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04d52ae0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onShowClick: (id: number) => void;\n  activeId: number;\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos, onShowClick, activeId } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )\n              : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger')}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onShowClick(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': activeId === todo.id,\n                    'fa-eye': activeId !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","// import classNames from 'classnames';\nimport { useState } from 'react';\nimport { FilterMethod } from '../../types/FilterMethod';\n\ntype Props = {\n  onChangeOption: (option: FilterMethod) => void;\n  onChangeQuary: (quary: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const { onChangeOption, onChangeQuary } = props;\n  const [quary, setQuary] = useState('');\n\n  onChangeQuary(quary);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => (\n              onChangeOption(event.target.value as FilterMethod))}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={quary}\n          onChange={(event) => setQuary(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {quary && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuary('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","// import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onCloseClick: (id: number) => void;\n};\n\nconst baseUser: User = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { todo, onCloseClick } = props;\n  const [userToShow, setUserToShow] = useState<User>(baseUser);\n\n  useEffect(\n    () => {\n      getUser(todo.userId)\n        .then(setUserToShow);\n\n      return () => {\n        setUserToShow(baseUser);\n      };\n    },\n    [],\n  );\n\n  return (\n    <div\n      className=\"modal is-active\"\n      // {classNames('modal', { 'is-active': userToShow.id !== 0 })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!userToShow.id ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCloseClick(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${userToShow.email}`}>\n                {userToShow.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoIdToShow, setTodoIdToShow] = useState(0);\n  const [filterMethod, setFilterMethod] = useState('all');\n  const [userQuary, setUserQuary] = useState('');\n\n  const onClick = (id:number) => setTodoIdToShow(id);\n  const onChangeOption = (option: string) => {\n    setFilterMethod(option);\n  };\n\n  const onChangeQuary = (quary: string) => setUserQuary(quary);\n\n  const todo = todos.find(el => el.id === todoIdToShow);\n\n  useEffect(\n    () => {\n      getTodos()\n        .then(setTodos);\n    },\n    [],\n  );\n\n  let todosToShow = [...todos];\n\n  switch (filterMethod) {\n    case 'active':\n      todosToShow = todos.filter(todoToShow => todoToShow.completed === false);\n      break;\n\n    case 'completed':\n      todosToShow = todos.filter(todoToShow => todoToShow.completed === true);\n      break;\n\n    case 'all':\n    default:\n      break;\n  }\n\n  if (userQuary) {\n    todosToShow = todosToShow.filter(task => task.title.toLowerCase().includes(userQuary.toLowerCase()));\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeOption={onChangeOption}\n                onChangeQuary={onChangeQuary}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todosToShow}\n                    onShowClick={onClick}\n                    activeId={todoIdToShow}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal\n          todo={todo}\n          onCloseClick={onClick}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}